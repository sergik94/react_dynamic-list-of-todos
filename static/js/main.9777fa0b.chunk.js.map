{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","filteredBy","searchQuery","getTodoInfo","todoId","todosFilteredByQuery","useMemo","filter","todo","title","includes","className","completed","map","id","type","onClick","TodoFilter","selectHandler","searchValue","inputHandler","isDeleteButtonAval","clearInput","onChange","value","placeholder","style","pointerEvents","Loader","TodoModal","user","closeModal","loadStatus","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","allTodos","setAllTodos","setFilteredBy","setSearchValue","setDeleteButtonAval","setUser","setTodo","isModalShown","setModalShown","isDataLoaded","setDataLoaded","isTodoLoaded","setTodoLoaded","loadTodos","a","useEffect","event","currentTarget","selectedTodo","userId","currUser","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9777fa0b.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  filteredBy: string;\n  searchQuery: string;\n  getTodoInfo: (todo: Todo) => void;\n  todoId: number | null;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos, filteredBy, searchQuery, getTodoInfo, todoId,\n}) => {\n  const todosFilteredByQuery = useMemo(() => {\n    return todos.filter(todo => {\n      if (searchQuery === '') {\n        return true;\n      }\n\n      // eslint-disable-next-line consistent-return\n      return todo.title.includes(searchQuery);\n    });\n  }, [searchQuery, todos]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todosFilteredByQuery.filter(todo => {\n            switch (filteredBy) {\n              case 'active':\n                return todo.completed === false;\n\n              case 'completed':\n                return todo.completed === true;\n\n              default:\n                return todo;\n            }\n          })\n            .map(todo => (\n              <tr\n                key={todo.id}\n                data-cy=\"todo\"\n                className={todo.id === todoId\n                  ? 'has-background-info-light'\n                  : ''}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed ? 'has-text-success'\n                    : 'has-text-danger'}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => getTodoInfo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={\n                        todo.id !== todoId ? 'far fa-eye' : 'far fa-eye-slash'\n                      }\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))\n        }\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ntype Props = {\n  filteredBy: string;\n  selectHandler: (event: React.FormEvent<HTMLSelectElement>) => void;\n  searchValue: string;\n  inputHandler: (event: React.FormEvent<HTMLInputElement>) => void;\n  isDeleteButtonAval: boolean;\n  clearInput: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filteredBy, selectHandler,\n  searchValue, inputHandler,\n  isDeleteButtonAval, clearInput,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={selectHandler}\n          value={filteredBy}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchValue}\n        onChange={inputHandler}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {isDeleteButtonAval\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          </span>\n        )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null;\n  todo: Todo | null;\n  closeModal: () => void;\n  loadStatus: string;\n};\n\nexport const TodoModal: React.FC<Props> = React.memo(({\n  user, todo, closeModal, loadStatus,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadStatus === 'isLoading' && <Loader />}\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            Todo #{todo!.id}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={closeModal}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          {loadStatus === 'loaded' && (\n            <>\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo!.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  todo!.completed\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)\n                }\n\n                {' by '}\n\n                <a href={user?.email}>\n                  {user?.name}\n                </a>\n              </p>\n            </>\n          )}\n\n          {loadStatus === 'error' && (\n            <p>Error. Data not loaded</p>\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-extra-boolean-cast */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { getTodos, getUser } from './api';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n  const [isDeleteButtonAval, setDeleteButtonAval] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [isModalShown, setModalShown] = useState(false);\n  const [isDataLoaded, setDataLoaded] = useState('isLoading');\n  const [isTodoLoaded, setTodoLoaded] = useState('isLoading');\n\n  const loadTodos = async () => {\n    setDataLoaded('isLoading');\n    try {\n      const todos = await getTodos();\n\n      setAllTodos(todos);\n      setDataLoaded('loaded');\n    } catch (err) {\n      setDataLoaded('error');\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const selectHandler = (event: React.FormEvent<HTMLSelectElement>) => {\n    setFilteredBy(event.currentTarget.value);\n  };\n\n  const inputHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    setSearchValue(event.currentTarget.value);\n    setDeleteButtonAval(true);\n  };\n\n  const clearInput = () => {\n    setSearchValue('');\n    setDeleteButtonAval(false);\n  };\n\n  const getTodoInfo = (selectedTodo: Todo) => {\n    setUser(null);\n    setModalShown(true);\n    setTodo(selectedTodo);\n    getUser(selectedTodo.userId)\n      .then(currUser => {\n        setUser(currUser);\n        setTodoLoaded('loaded');\n      })\n      .catch(() => {\n        setTodoLoaded('error');\n      });\n  };\n\n  const closeModal = () => {\n    setTodo(null);\n    setModalShown(false);\n    setTodoLoaded('isLoading');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteredBy={filteredBy}\n                selectHandler={selectHandler}\n                searchValue={searchValue}\n                inputHandler={inputHandler}\n                isDeleteButtonAval={isDeleteButtonAval}\n                clearInput={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isDataLoaded === 'isLoading' && <Loader />}\n              {isDataLoaded === 'loaded' && (\n                <TodoList\n                  todos={allTodos}\n                  filteredBy={filteredBy}\n                  searchQuery={searchValue}\n                  getTodoInfo={getTodoInfo}\n                  todoId={todo?.id || null}\n                />\n              )}\n              {isDataLoaded === 'error' && (\n                // eslint-disable-next-line react/jsx-one-expression-per-line\n                <p>Error. Data not loaded</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalShown && (\n        <TodoModal\n          user={user}\n          todo={todo}\n          closeModal={closeModal}\n          loadStatus={isTodoLoaded}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}